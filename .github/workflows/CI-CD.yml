name: ZanobiJS CI-CD Validation

on:
  pull_request:
    branches: [develop, beta, main]
    types: [opened, reopened, edited, synchronize]

jobs:
  validate-branch:
    name: Validate Branch and Commits
    runs-on: ubuntu-latest
    steps:
      - name: Check PR title follows Conventional Commits
        run: |
          echo "üîç Checking PR title for conventional commit format"
          PR_TITLE="${{ github.event.pull_request.title }}"
          if [[ "$PR_TITLE" =~ ^(chore|ci|docs|feat|fix|style|refactor|test|sample|build|revert).*: ]]; then
            echo "‚úÖ PR title is valid: $PR_TITLE"
          else
            echo "‚ùå Error: PR title does not follow Conventional Commits format."
            echo "Examples:"
            echo "  feat: add new feature"
            echo "  feat(core): add ability to parse arrays"
            echo "  ci: ‚ú® PR title validation was added"
            echo "  fix(core): üêõ resolve login issue"
            exit 1
          fi

      - name: Check branch name pattern
        if: github.base_ref == 'develop'
        run: |
          BRANCH_NAME="${{ github.head_ref }}"
          if [[ "$BRANCH_NAME" =~ ^(chore|ci|docs|feat|fix|style|refactor|test|sample|build|revert)\/.+ ]]; then
            echo "‚úÖ Branch name $BRANCH_NAME follows the required naming convention"
          else
            echo "‚ùå Error: Branch name $BRANCH_NAME does not follow the required naming convention"
            echo "Branch must follow naming conventions defined in CONTRIBUTING.md"
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

  validate:
    name: Validate Code Quality
    runs-on: ubuntu-latest
    needs: [validate-branch]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint check
        run: npm run lint:check
        continue-on-error: false

      - name: Prettier check
        run: npm run prettier:check
        continue-on-error: false

      - name: Run tests with coverage
        run: npm run test
        continue-on-error: false

      - name: Check test coverage
        env:
          MIN_COVERAGE: ${{ vars.MIN_COVERAGE || 90 }}
        run: |
          set -e
          COVERAGE=$(npx nyc report --reporter=text | grep "All files" | awk '{print $3}' | tr -d '%')
          echo "Test coverage: $COVERAGE%"
          echo "Minimum required coverage: $MIN_COVERAGE%"
          if (( $(echo "$COVERAGE < $MIN_COVERAGE" | bc -l) )); then
            echo "‚ùå Error: Test coverage is below $MIN_COVERAGE%. Current coverage: $COVERAGE%"
            exit 1
          fi

      - name: Check if changes are inside packages
        id: check_changes
        run: |
          echo "üîç Checking for changes inside packages"
          git fetch origin ${{ github.base_ref }} --depth=1
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }} HEAD)
          echo "Changed files:"
          echo "$CHANGED_FILES"

          if echo "$CHANGED_FILES" | grep -q '^packages/'; then
            echo "‚úÖ Changes detected inside packages"
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "üü° No changes inside packages"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: SonarQube Scan
        if: steps.check_changes.outputs.changed == 'true'
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: SonarQube Quality Gate check
        if: steps.check_changes.outputs.changed == 'true'
        uses: SonarSource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - name: Build
        run: npm run build
        continue-on-error: false
